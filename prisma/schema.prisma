generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Account {
  id                 String    @id @default(cuid())
  userId             String
  providerType       String
  providerId         String
  providerAccountId  String
  refreshToken       String?   @db.Text
  accessToken        String?   @db.Text
  accessTokenExpires DateTime?
  accessTokenType    String?
  accessTokenScope   String?
  tokenId            String?   @db.Text
  sessionState       String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([providerId, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  userId       String
  expires      DateTime
  sessionToken String   @unique

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String       @id @default(cuid())
  name          String?
  email         String?      @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  posts         Posts[]
  favourites    Favourites[]
}

model VerificationRequest {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Posts {
  id       String   @id @default(cuid())
  poster   String
  postedAt DateTime @default(now())
  content  String
  upvotes  Int

  posterId User @relation(fields: [poster], references: [id])
}

model Favourites {
  id        String @id @default(uuid())
  user      String
  postingId String

  userId User @relation(fields: [user], references: [id])
}
